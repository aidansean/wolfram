var default_rule = [0,1,1,1,1,0,0,0] ;
var default_n = 100 ;

var cells = new Array() ;
var n    = default_n ;
var rule = default_rule ;
var rule_power = Math.floor(Math.log(rule.length)/Math.log(2)) ;
var lower = 0 ;
var upper = 0 ;

function set_lower_upper(){
  if(rule_power%2){
    lower = -(rule_power-1)/2 ;
    upper =  (rule_power-1)/2 ;
  }
  else{
    lower = -(rule_power)/2 ;
    upper =  (rule_power-2)/2 ;
  }
}

function start(){
  parse_rule() ;
  parse_n() ;
  set_lower_upper() ;
  make_table() ;
  
  // Update various bits and pieces
  var rule_for_input = '' ;
  for(var i=0 ; i<rule.length ; i++){ rule_for_input = rule_for_input + rule[i] ; }
  document.getElementById('p_rule'    ).innerHTML = 'This pattern was generated by the rule <tt><a href="?rule=' + rule_for_input + '"&amp;n=' + n + '>' + rule_for_input + '</a></tt>.' ;
  document.getElementById('input_rule').value     = rule_for_input ;
  document.getElementById('input_n'   ).value     = n ;
}

function make_table(){
  // Make array of values
  for(var i=0 ; i<2*n+1 ; i++){ cells[i] = [0,0] ; }
  cells[n] = [1,0] ;
  
  // Make table
  var div = document.getElementById('wrapper_div') ;
  var table = document.createElement('table') ;
  var tbody = document.createElement('tbody') ;
  table.className = 'pattern' ;
  table.appendChild(tbody) ;
  
  // Loop over rows
  for(var i=0 ; i<n ; i++){
    var tr = document.createElement('tr') ;
    for(var j=0 ; j<2*n+1 ; j++){
      var td = document.createElement('td') ;
      td.id = 'td_' + i + '_' + j ;
      td.className = 'grid_' + cells[j][0] ;
      tr.appendChild(td) ;
    }
    tbody.appendChild(tr) ;
    
    // Update rows
    for(var j=0 ; j<2*n+1 ; j++){ cells[j][1] = r(j)        ; }
    for(var j=0 ; j<2*n+1 ; j++){ cells[j][0] = cells[j][1] ; }
  }
  div.appendChild(table) ;
}

function parse_n(){
  var url = document.URL ;
  if(!url.search('n=')) return ;
  var parts = url.split('n=') ;
  if(parts.length==1) return ;
  n = parts[1].split('&')[0] ;
}

function parse_rule(){
  var url = document.URL ;
  if(!url.search('rule=')) return ;
  var parts = url.split('rule=') ;
  if(parts.length==1) return ;
  var rule_string = parts[1].split('&')[0] ;
  var success = false ;
  var power = 0 ;
  var good_rule = false ;
  while(!success){
    if(rule_string.length == Math.pow(2,power)){
      success = true ;
      // We have a nice rule!
      if(rule_string.match('^[0-1]+$')) good_rule = true ;
      if(good_rule){
        rule = new Array() ;
        for(var i=0 ; i<rule_string.length ; i++){
          rule[i] = rule_string[i] ;
        }
      }
    }
    else if(rule_string.length < Math.pow(2,power)){
      success = true ;
    }
    power++ ;
  }
  if(!good_rule) alert("I'm sorry, I couldn't parse the rule: " + rule_string) ;
}

function r(j){
  var term = 0 ;
  var power = 0 ;
  power = rule_power-1 ;
  for(var k=lower ; k<=upper ; k++){
    term += get_cell(j+k)*Math.pow(2,power) ;
    power-- ;
  }
  if(term<0 || term>rule.length) return 0 ;
  return rule[term] ;
}

function get_cell(j){
  if(j<0 || j>2*n) return 0 ;
  return cells[j][0] ;
}

